{"version":3,"sources":["images/home-banner.png","Screens/Home.js","Reducers/type.js","Actions/UpdateStatus.js","Actions/ListAppointments.js","Components/RequestAlert.js","Components/AcceptedRequest.js","Actions/Prescriptions.js","Actions/ShowProfile.js","Components/Tabs.js","Actions/NewAppointment.js","Actions/GetSlot.js","Components/TimeSlot.js","Components/Rating.js","Components/NewAppointment.js","Actions/ListDoctors.js","Components/RejectedRequest.js","Components/PendingRequest.js","Actions/UploadRecord.js","Components/UploadRecord.js","Actions/Rating.js","Components/CompletedApp.js","Components/TabsPatient.js","Components/LoadingSpinner.js","Components/PersonalDetailPatient.js","Actions/UpdatePersonalDetails.js","Components/TimeRangePicker.js","Components/ShowTimeSlot.js","Components/PersonalDetailDoctor.js","Actions/SetActive.js","Screens/DashBoard.js","images/welcome.svg","Components/LoginForm.js","Actions/UserLogin.js","Components/Toast.js","Components/SignupForm.js","Screens/Login.js","Actions/UploadAvatar.js","Components/DoctorProfile.js","Components/PatientProfile.js","Screens/Profile.js","Components/ShowProfile.js","Screens/PatientProfileScreen.js","images/Practo-logo.png","Components/NavBar.js","App.js","store.js","Reducers/UserReducer.js","Reducers/appointmentReducer.js","Reducers/ListUser.js","Reducers/updateStatus.js","Reducers/prescriptions.js","Reducers/ShowProfile.js","index.js"],"names":["Home","Container","style","Form","Row","Col","xs","InputGroup","Control","type","placeholder","prefix","Image","src","banner","fluid","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","LIST_APPOINTMENTS","LIST_APPOINTMENTS_SUCCESS","LIST_APPOINTMENTS_FAIL","CREATE_APPOINTMENTS","CREATE_APPOINTMENTS_SUCCESS","CREATE_APPOINTMENTS_FAIL","LIST_DOCTOR","LIST_DOCTOR_SUCCESS","LIST_DOCTOR_FAIL","UPDATE_PERSONAL_DETAIL","UPDATE_PERSONAL_DETAIL_SUCCESS","UPDATE_PERSONAL_DETAIL_FAIL","GET_SLOT","GET_SLOT_SUCCESS","GET_SLOT_FAIL","GET_PRESCRIPTION","GET_PRESCRIPTION_SUCCESS","GET_PRESCRIPTION_FAIL","SHOW_PROFILE","SHOW_PROFILE_SUCCESS","SHOW_PROFILE_FAIL","updateAppointment","status","id","dispatch","a","JSON","parse","localStorage","getItem","token","axios","put","params","headers","data","payload","response","message","listAppointment","isDoctor","api","get","console","log","RequestAlert","props","useDispatch","userInfo","useSelector","state","userLogin","user","clickHandle","_id","Alert","variant","Heading","className","Button","onClick","AcceptedRequest","useState","show","setShow","handleClose","presc","setPresc","history","useHistory","handleSubmit","patientId","doctorId","appId","post","doctor_id","prescribed_medicines","patient_id","appointment_id","error","setPrescription","handleViewProfile","push","Modal","onHide","Header","closeButton","Title","Body","Group","controlId","Label","as","rows","onChange","e","target","value","Footer","Tabs","appointments","pendingAppointment","map","app","accept_status","accepted","Tab","defaultActiveKey","sm","Nav","Item","Link","eventKey","Content","Pane","createAppointments","newAppdata","getSlot","TimeSlot","Date","startDate","setStartDate","slots","selectedDate","toDateString","forEach","appDate","createdAt","appointment_time","selected","date","dateFormat","showSlot","setAvailable","available","setDate","setDob","Rating","setRating","stars","NewAppointment","page","setPage","curDoctor","setCurDoctor","showAvailable","setShowAvailable","setAppDate","appTime","setAppTime","availableDoctors","doc","avaliableSlots","flat","available_slots","doctorsList","d","name","profile","md","ListGroup","email","age","specialisation","size","averageRating","edit","showAvailableSlots","s","includes","dialogClassName","aria-labelledby","stlye","appointment_date","listDoctor","RejectedRequest","PendingRequest","updateRecord","medicaldoc","xray","report","currentMedicine","formData","FormData","rec","append","then","catch","UploadRecord","medicalDocs","xrays","reports","currMedicines","files","handleUploadMedical","multiple","handleUploadXrays","handleUploadReports","handleUploadCurrmedics","review","doctor","CompletedApp","rate","setRate","handlePresc","prescriptions","p","count","color","activeColor","a11y","isHalf","emptyIcon","halfIcon","filledIcon","TabsPatient","click","setClick","prescription","LoadingSpinner","spinner","text","PersonalDetailPatient","dob","gender","blood_group","location","image","userDetails","setUserDetails","values","date_of_birth","updateProfilePatient","loading","updateStatus","fontSize","FormControl","file","column","plaintext","readOnly","defaultValue","custom","options","selectedIndex","htmlFor","TimeRangePicker","start","setStart","end","setEnd","disableClock","ShowTimeSlot","startTime","moment","endTime","isBefore","add","timeStops","format","ind","length","getTimeStops","handleSelectSlot","PersonalDetailDoctor","slotShow","setSlotShow","slot","selectedSlot","setSelectedSlot","val","setActive","isActive","DashBoard","checked","setChecked","useEffect","onColor","onBoarding","LoginForm","password","setState","setItem","stringify","onInput","Text","Check","label","to","ShowToast","SignupForm","Login","redirect","search","split","pushState","title","welcome","updateAvatar","DoctorProfile","avatar","setImage","btoa","alt","PatientProfile","height","width","bloodGroup","Profile","ShowProfile","patientDetails","dismissible","NavBar","handleLogout","removeItem","Navbar","Brand","href","logo","bsPrefix","Toggle","aria-controls","Collapse","NavDropdown","componentClass","App","exact","path","component","middleware","thunk","reducers","combineReducers","action","newAppointment","updateInfo","initialState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4c5c6c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-banner.f9d28221.png\";","import React  from 'react'\r\nimport { Image,Container,Col,Form,InputGroup,Row} from 'react-bootstrap'\r\nimport banner from \"../images/home-banner.png\"\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n const Home=()=> {\r\n   \r\n        return (\r\n                <>\r\n                <Container style={{\"marginTop\":\"25px\",\"marginBottom\":\"25px\"}}>\r\n                           \r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs=\"3\" style={{\"margin\":\"0\",\"padding\":\"0\"}}>\r\n                                        <InputGroup>\r\n                                            <div style={{\"border\":\"1px solid #dde2de\",\"borderRight\":\"none\",}}>\r\n                                                <LocationOnOutlinedIcon style={{\"marginTop\":\"5px\"}}/>\r\n                                            </div>\r\n                                            <Form.Control type=\"text\" placeholder=\"Chennai\" style={{\"border\":\"1px solid #dde2de\",\"borderLeft\":\"none\",\"padding\":\"5px\"}} prefix = \"input-border\"  />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col xs=\"6\" style={{\"margin\":\"0\",\"padding\":\"0\"}}>\r\n                                        <InputGroup>\r\n                                                <div style={{\"border\":\"1px solid #dde2de\",\"borderRight\":\"none\",}}>\r\n                                                    <SearchOutlinedIcon style={{\"marginTop\":\"5px\"}}/>\r\n                                                </div>\r\n                                                <Form.Control type=\"text\" placeholder=\"search doctors, clinics, hospitals, etc\" style={{\"border\":\"1px solid #dde2de\",\"borderLeft\":\"none\",\"padding\":\"5px\"}} prefix = \"input-border\" />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                </Container>\r\n                <Image src={banner} fluid/>\r\n                </>\r\n        )\r\n    }\r\n    export default Home","export const LOGIN = \"USER_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SIGNUP = \"USER_SIGNUP\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const LIST_APPOINTMENTS = \"LIST_APPOINTMENTS\"\r\nexport const LIST_APPOINTMENTS_SUCCESS = \"LIST_APPOINMENTS_SUCCESS\"\r\nexport const LIST_APPOINTMENTS_FAIL = \"LIST_APPOINTMENTS_FAIL\"\r\nexport const CREATE_APPOINTMENTS = \"CREATE_APPOINTMENTS\"\r\nexport const CREATE_APPOINTMENTS_SUCCESS = \"CREATE_APPOINTMENTS_SUCCESS\"\r\nexport const CREATE_APPOINTMENTS_FAIL = \"CREATE_APPOINTMENTS_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\nexport const ACCEPTED = \"ACCEPTED\"\r\nexport const REJECTED = \"REJECTED\"\r\nexport const STATUS_UPDATE_FAILED = \"STATUS_UPDATE_FAILED\"\r\nexport const LIST_DOCTOR = \"LIST_DOCTOR\"\r\nexport const LIST_DOCTOR_SUCCESS = \"LISTDOCTOR_SUCCESS\"\r\nexport const LIST_DOCTOR_FAIL = \"LIST_DOCTOR_FAIL\"\r\nexport const UPDATE_PERSONAL_DETAIL = \"UPDATE_PERSONAL_DETAIL\"\r\nexport const UPDATE_PERSONAL_DETAIL_SUCCESS = \"UPDATE_PERSONAL_DETAIL_SUCCESS\"\r\nexport const UPDATE_PERSONAL_DETAIL_FAIL = \"UPDATE_PERSONAL_DETAIL_FAIL\"\r\nexport const GET_SLOT = \"GET_SLOT\"\r\nexport const GET_SLOT_SUCCESS = \"GET_SLOT_SUCCESS\"\r\nexport const GET_SLOT_FAIL = \"GET_SLOT_FAIL\"\r\nexport const SET_PRESCRIPTION = \"SET_PRESCRIPTION\"\r\nexport const SET_PRESCRIPTION_SUCCESS = \"SET_PRESCRIPTION_SUCCESS\"\r\nexport const SET_PRESCRIPTION_FAIL = \"SET_PRESCRIPTION_FAIL\"\r\nexport const GET_PRESCRIPTION = \"GET_PRESCRIPTION\"\r\nexport const GET_PRESCRIPTION_SUCCESS = \"GET_PRESCRIPTION_SUCCESS\"\r\nexport const GET_PRESCRIPTION_FAIL = \"GET_PRESCRIPTION_FAIL\"\r\nexport const UPLOAD_AVATAR = \"UPLOAD_AVATAR\"\r\nexport const UPLOAD_AVATAR_SUCCESS = \"UPLOAD_AVATAR_SUCCESS\"\r\nexport const UPLOAD_AVATAR_FAIL = \"UPLOAD_AVATAR_FAIL\"\r\nexport const UPLOAD_RECORD = \"UPLOAD_RECORD\"\r\nexport const UPLOAD_RECORD_SUCCESS = \"UPLOAD_RECORD_SUCCESS\"\r\nexport const UPLOAD_RECORD_FAIL = \"UPLOAD_RECORD_FAIL\"\r\nexport const SET_ACTIVE = \"SET_ACTIVE\"\r\nexport const SHOW_PROFILE = \"SHOW_PROFILE\"\r\nexport const SHOW_PROFILE_SUCCESS = \"SHOW_PROFILE_SUCCESS\"\r\nexport const SHOW_PROFILE_FAIL = \"SHOW_PROFILE_FAIL\"\r\nexport const SET_RATING = \"SET_RATING\"","import {\r\n    ACCEPTED,\r\n    REJECTED, STATUS_UPDATE_FAILED\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nconst updateAppointment = (status, id) => async (dispatch) => {\r\n    try {\r\n\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n        const { data } = await axios.put(\"/update-status\",\r\n            {},\r\n            { params: { id, status } },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n\r\n        const setType = status === \"Accepted\" ? ACCEPTED : REJECTED\r\n        dispatch({\r\n            type: setType,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: STATUS_UPDATE_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\nexport default updateAppointment","import {\r\n    LIST_APPOINTMENTS,\r\n    LIST_APPOINTMENTS_SUCCESS,\r\n    LIST_APPOINTMENTS_FAIL\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nconst listAppointment = (id, isDoctor) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: LIST_APPOINTMENTS,\r\n\r\n        })\r\n\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        var api = isDoctor ? \"/listapp-doctor\" : \"/listapp-patient\"\r\n        const { data } = await axios.get(`${api}`, {\r\n            params: { id },\r\n\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Bearer ${token}`,\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: LIST_APPOINTMENTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: LIST_APPOINTMENTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport default listAppointment","import React from 'react'\r\nimport {Alert,Button} from 'react-bootstrap'\r\nimport updateAppointment from \"../Actions/UpdateStatus\"\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport listAppointment from \"../Actions/ListAppointments\"\r\nconst RequestAlert=(props)=> {\r\n    const dispatch = useDispatch()\r\n    const {userInfo} = useSelector(state=>state.userLogin)\r\n    var user =''\r\n        if(userInfo){\r\n            user = userInfo.user\r\n        }\r\n    var {isDoctor} = user   \r\n    const clickHandle=((status,id)=>{\r\n        dispatch(updateAppointment(status,id))\r\n        dispatch(listAppointment(user._id,isDoctor))\r\n    } ) \r\n    return (\r\n        <Alert  variant=\"success\" id={props.id}>\r\n            <Alert.Heading>Appointment Request</Alert.Heading>\r\n            <p>\r\n            This patient has request for an appointment with in time:\r\n            </p>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-end\">\r\n            <Button  variant=\"outline-success\" onClick={()=>clickHandle(\"Accepted\",props.id)}>\r\n               Accept\r\n            </Button>\r\n            <Button  variant=\"outline-danger\" onClick={()=>clickHandle(\"Rejected\",props.id)} >\r\n                Reject\r\n            </Button>\r\n            </div>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default RequestAlert\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Modal, Form } from \"react-bootstrap\"\r\nimport { setPrescription } from \"../Actions/Prescriptions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport updateAppointment from \"../Actions/UpdateStatus\"\r\nimport { showProfile } from \"../Actions/ShowProfile\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst AcceptedRequest = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [presc, setPresc] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleSubmit = () => {\r\n        handleClose();\r\n        dispatch(setPrescription(\r\n            presc, props.patientId, props.doctorId, props.appId\r\n        ))\r\n        dispatch(updateAppointment(\"Completed\", props.appId))\r\n    }\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    const handleViewProfile = () => {\r\n        dispatch(showProfile(props.patientId))\r\n        history.push(\"/patientprofile\")\r\n    }\r\n    return (\r\n\r\n        <Alert variant=\"success\" id={props.id}>\r\n            <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n            <p>\r\n                Your request for appointment with the doctor is accepted.\r\n            </p>\r\n            <hr />\r\n            <p className=\"mb-0\">\r\n\r\n                <Button variant=\"success\" onClick={() => handleShow()}>\r\n                    Join Meeting\r\n                </Button>\r\n                {user.isDoctor ? (\r\n                    <Button variant=\"primary\" style={{ \"marginLeft\": \"20px\" }} onClick={() => handleViewProfile()}>View Patient Profile</Button>\r\n                ) : null}\r\n            </p>\r\n            {\r\n                user.isDoctor ?\r\n                    (<Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>You meeting has been ended</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <h1>Prescriptions</h1>\r\n                            <Form>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Write your prescription here</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} onChange={(e) => setPresc(e.target.value)} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n                                Save Changes\r\n                            </Button>\r\n\r\n                        </Modal.Footer>\r\n                    </Modal>) : (<Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Join Meeeting</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Wait for the doctor to connect</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>)\r\n            }\r\n        </Alert >\r\n\r\n    )\r\n}\r\n\r\nexport default AcceptedRequest\r\n","import {\r\n    SET_PRESCRIPTION,\r\n    SET_PRESCRIPTION_SUCCESS,\r\n    SET_PRESCRIPTION_FAIL,\r\n    GET_PRESCRIPTION,\r\n    GET_PRESCRIPTION_SUCCESS,\r\n    GET_PRESCRIPTION_FAIL\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nexport const setPrescription = (presc, patientId, doctorId, appId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: SET_PRESCRIPTION,\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = axios.post(\"/setPrescription\",\r\n            {\r\n                doctor_id: doctorId,\r\n                prescribed_medicines: presc,\r\n                patient_id: patientId,\r\n                appointment_id: appId\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n            })\r\n        dispatch({\r\n            type: SET_PRESCRIPTION_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: SET_PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPrescription = (appId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_PRESCRIPTION,\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = await axios.get(\"/prescriptionlist\",\r\n            {\r\n                params: { id: appId },\r\n\r\n\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n            })\r\n        console.log(data)\r\n        dispatch({\r\n            type: GET_PRESCRIPTION_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: GET_PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n","import {\r\n    SHOW_PROFILE,\r\n    SHOW_PROFILE_SUCCESS,\r\n    SHOW_PROFILE_FAIL\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nexport const showProfile = (id) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: SHOW_PROFILE\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n\r\n        const { data } = await axios.get(\"/showProfile\",\r\n            { params: { id } },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n        dispatch({\r\n            type: SHOW_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: SHOW_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {Row,Col,Nav,Tab} from 'react-bootstrap'\r\nimport RequestAlert from \"./RequestAlert\"\r\nimport AcceptedRequest from './AcceptedRequest'\r\nimport { useSelector } from 'react-redux'\r\nconst  Tabs=()=> {\r\n \r\n\r\n    const {appointments} = useSelector(state=>state.appointments)\r\n    \r\n    \r\n    const pendingAppointment = appointments ? appointments.map((app)=>{\r\n        if(app.accept_status === \"pending\"){\r\n         \r\n            return (\r\n                <RequestAlert id={app._id} />\r\n            )\r\n        } \r\n        return null\r\n    }):null\r\n    const accepted = appointments ? appointments.map((app)=>{\r\n        if(app.accept_status===\"Accepted\"){\r\n            return(\r\n                <AcceptedRequest appId={app._id} doctorId={app.doctor_id} patientId={app.patient_id}/>\r\n            )\r\n        }\r\n        return null\r\n    }):null\r\n    return (\r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                        <Row>\r\n                            <Col sm={3} key=\"col-1\">\r\n                                <Nav variant=\"tabs\" className=\"flex-column\">\r\n                                    <Nav.Item key=\"first\">\r\n                                        <Nav.Link eventKey=\"first\" >Appointments</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item key=\"second\">\r\n                                        <Nav.Link eventKey=\"second\">Requests</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    {/* <Nav.Item key=\"third\">\r\n                                        <Nav.Link eventKey=\"third\">Available Slots</Nav.Link>\r\n                                    </Nav.Item> */}\r\n                                </Nav>\r\n                            </Col>\r\n                            <Col sm={9} key=\"col-2\">\r\n                                <Tab.Content>\r\n                                    <Tab.Pane eventKey=\"first\" key=\"first-content\">\r\n                                    {accepted}\r\n                                    </Tab.Pane>\r\n                                    <Tab.Pane eventKey=\"second\" key=\"second-content\">\r\n                                    {pendingAppointment}\r\n                                    </Tab.Pane>\r\n                                    {/* <Tab.Pane eventKey=\"third\" key=\"third-content\">\r\n                                        available slots\r\n                                    </Tab.Pane> */}\r\n                                </Tab.Content>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab.Container>\r\n            \r\n            )\r\n    }\r\nexport default Tabs\r\n","import { CREATE_APPOINTMENTS, CREATE_APPOINTMENTS_FAIL, CREATE_APPOINTMENTS_SUCCESS } from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nconst createAppointments = (newAppdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_APPOINTMENTS,\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = axios.post(\"/newapp\",\r\n            {\r\n                ...newAppdata\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n            })\r\n        dispatch({\r\n            type: CREATE_APPOINTMENTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: CREATE_APPOINTMENTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\nexport default createAppointments\r\n\r\n\r\n","import {GET_SLOT,\r\n    GET_SLOT_SUCCESS,\r\n    GET_SLOT_FAIL} from \"../Reducers/type\"\r\n\r\nconst getSlot =(data)=>async (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type:GET_SLOT,\r\n        })\r\n        \r\n        dispatch({\r\n            type: GET_SLOT_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type : GET_SLOT_FAIL,\r\n            payload: \"some error occured\"\r\n                \r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default getSlot","import React,{useState} from 'react'\r\nimport DatePicker from \"react-datepicker\"\r\nimport {Button} from \"react-bootstrap\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport getSlot from \"../Actions/GetSlot\"\r\n\r\n\r\nconst TimeSlot=(props) => {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const dispatch = useDispatch()\r\n    const {appointments} = useSelector(state=>state.appointments)\r\n    \r\n    var slots=[]\r\n    var selectedDate = new Date(startDate).toDateString()\r\n    if(appointments){\r\n      appointments.forEach(function(app){\r\n          var appDate = new Date(app.createdAt).toDateString()\r\n          if(selectedDate === appDate){\r\n            slots.push(app.appointment_time)\r\n        }} )\r\n      }\r\n    const handleSlot=()=>{\r\n        props.setAvailable(!props.available)\r\n        props.setDate(selectedDate)\r\n        dispatch(getSlot(slots))\r\n    }\r\n    return (\r\n        <>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date) => setStartDate(date)}\r\n        dateFormat=\"MMMM d yyyy\"\r\n      />\r\n      {props.showSlot ? (\r\n      <Button variant=\"primary\" style={{\"marginTop\":\"10px\"}} onClick={()=>handleSlot()}>Get Slots</Button>):props.setDob(startDate)}\r\n      </>\r\n      \r\n    );\r\n  };\r\n\r\n\r\nexport default TimeSlot\r\n","import React from 'react'\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nfunction Rating(props) {\r\n    return (\r\n        <div>\r\n            <ReactStars {...props} onChange={(value) => props.setRating({ stars: value })} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React, { useState } from 'react'\r\nimport { Modal, Button, Alert, Container, Row, Col, ListGroup } from \"react-bootstrap\"\r\nimport createAppointments from \"../Actions/NewAppointment\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { FaUserTie } from \"react-icons/fa\";\r\nimport TimeSlot from \"./TimeSlot\"\r\nimport Rating from \"./Rating\"\r\n\r\nconst NewAppointment = (props) => {\r\n  const [page, setPage] = useState(1)\r\n  const [curDoctor, setCurDoctor] = useState(null)\r\n  const [show, setShow] = useState(false);\r\n  const [showAvailable, setShowAvailable] = useState(false)\r\n  const [appDate, setAppDate] = useState(null)\r\n  const [appTime, setAppTime] = useState(null)\r\n  const { availableDoctors } = useSelector(state => state.availableDoctors)\r\n  const slots = availableDoctors ? availableDoctors.map((doc) => {\r\n    if (doc._id === curDoctor) {\r\n      return (doc.avaliableSlots)\r\n    } return null\r\n  }).flat() : null\r\n\r\n  const clickHandle = () => {\r\n    setShow(true)\r\n    setPage(1)\r\n\r\n  }\r\n  const viewProfile = (id) => {\r\n    setCurDoctor(id)\r\n    setPage(2)\r\n\r\n  }\r\n  const { available_slots } = useSelector(state => state.available_slots)\r\n\r\n  const doctorsList = availableDoctors ? availableDoctors.map((d) => {\r\n    return (\r\n      <Alert key={d._id} variant=\"success\">\r\n        <Alert.Heading>{d.name}\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button variant=\"outline-success\" onClick={() => viewProfile(d._id)}>\r\n              View Profile\r\n            </Button>\r\n          </div>\r\n        </Alert.Heading>\r\n      </Alert>\r\n    )\r\n  }) : (<Alert variant=\"danger\">\r\n    All the doctors are busy with their appointment. Try again later ...\r\n  </Alert>)\r\n  const profile = availableDoctors ? availableDoctors.map((d) => {\r\n    if (d._id === curDoctor) {\r\n      return (\r\n        <>\r\n          <Container>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={12} sm={4} md={4}>\r\n                <FaUserTie style={{ \"fontSize\": \"150px\" }} />\r\n              </Col>\r\n            </Row>\r\n            <ListGroup variant=\"flush\" className=\"justify-content-md-center \">\r\n              <ListGroup.Item key=\"name\">Name : {d.name}</ListGroup.Item>\r\n              <ListGroup.Item key=\"email\">Email : {d.email}</ListGroup.Item>\r\n              <ListGroup.Item key=\"age\">Age : {d.age}</ListGroup.Item>\r\n              <ListGroup.Item key=\"field\">Specialised in : {d.specialisation}</ListGroup.Item>\r\n\r\n              <ListGroup.Item key=\"rating\">\r\n                <Row>\r\n                  <Col sm=\"3\">\r\n                    Rating :\r\n                  </Col>\r\n                  <Col sm=\"5\">\r\n                    <Rating size={25} value={d.averageRating} edit={false} />\r\n                  </Col>\r\n                </Row>\r\n\r\n\r\n              </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n            <Button variant=\"info\" onClick={() => setPage(1)}>\r\n              Back\r\n            </Button>\r\n            <Button variant=\"info\" className=\"float-right\" onClick={() => setPage(3)}>\r\n              View available Slots\r\n            </Button>\r\n          </Container>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }) : null\r\n  const onHide = () => {\r\n    setShowAvailable(false)\r\n    setShow(false)\r\n  }\r\n  const showAvailableSlots = available_slots && available_slots !== [] ? slots.map((s) => {\r\n    if (available_slots.includes(s)) {\r\n      return (<Button key={s} onClick={() => setAppTime(s)} variant=\"danger\" style={{ \"marginBottom\": \"10px\" }}>{s}</Button>)\r\n    }\r\n    return (<Button key={s} onClick={() => setAppTime(s)} variant=\"outline-success\" style={{ \"marginBottom\": \"10px\" }}>{s}</Button>)\r\n  }) : null\r\n  const dispatch = useDispatch()\r\n  const handleSubmit = () => {\r\n    dispatch(createAppointments({\r\n      doctor_id: curDoctor,\r\n      appointment_date: appDate,\r\n      appointment_time: appTime,\r\n      accept_status: \"pending\",\r\n      patient_id: props.patientId\r\n    }))\r\n    setShow(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => clickHandle()}>\r\n        + Create Appointment\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={() => onHide()}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Create New Appointment\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          {page === 1 ? (doctorsList)\r\n            : page === 2 ? (profile) :\r\n              page === 3 ? (\r\n\r\n                <>\r\n                  <Container>\r\n                    <Row stlye={{ \"margin\": \"20px\", \"padding\": \"20px\" }}>\r\n                      <Col>\r\n                        <h5>Enter the date :</h5>\r\n                      </Col>\r\n                      <Col>\r\n                        <TimeSlot showSlot={true} available={showAvailable} setAvailable={setShowAvailable} doctorId={curDoctor} setDate={setAppDate} />\r\n                      </Col>\r\n                    </Row>\r\n                    {\r\n                      showAvailable ? (\r\n                        <>\r\n                          <Row style={{ \"marginTop\": \"30px\" }}>\r\n                            <Col>\r\n                              <h5>Available Slots</h5>\r\n                            </Col>\r\n                            <Col>\r\n                              {showAvailableSlots}\r\n                            </Col>\r\n                          </Row>\r\n                        </>\r\n\r\n                      ) : null}\r\n                  </Container>\r\n\r\n\r\n                  <Button variant=\"info\" onClick={() => setPage(2)} style={{ \"marginTop\": \"100px\", \"marginLeft\": \"10px\" }}>\r\n                    Back\r\n                  </Button>\r\n                  <Button variant=\"primary\" onClick={() => handleSubmit()} className=\"float-right\" style={{ \"marginTop\": \"100px\", \"marginLeft\": \"10px\" }}>\r\n                    Fix appointment\r\n                  </Button>\r\n                </>\r\n\r\n\r\n\r\n              ) : null}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default NewAppointment\r\n","import { LIST_DOCTOR, LIST_DOCTOR_FAIL, LIST_DOCTOR_SUCCESS } from \"../Reducers/type\"\r\n\r\nimport axios from \"axios\"\r\n\r\nconst listDoctor = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LIST_DOCTOR,\r\n\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = await axios.get(\"/doctorlist\", {\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Bearer ${token}`,\r\n            },\r\n        })\r\n\r\n        dispatch({\r\n            type: LIST_DOCTOR_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: LIST_DOCTOR_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport default listDoctor","import React from 'react'\r\nimport {Alert} from \"react-bootstrap\"\r\n\r\nconst RejectedRequest =(props)=> {\r\n   \r\n        return (\r\n            <Alert key={props.id} variant=\"danger\">\r\n                Your request for appointment with the doctor has been rejected by the doctor\r\n            </Alert>\r\n        )\r\n    \r\n}\r\nexport default RejectedRequest","import React from 'react'\r\nimport {Alert} from \"react-bootstrap\"\r\n\r\nfunction PendingRequest(props) {\r\n    return (\r\n        <Alert key={props.id} variant=\"warning\">\r\n            your request has not been accepted by the doctor\r\n      </Alert>\r\n    )\r\n}\r\n\r\nexport default PendingRequest\r\n","import {\r\n    UPLOAD_RECORD,\r\n    UPLOAD_RECORD_SUCCESS,\r\n    UPLOAD_RECORD_FAIL\r\n} from \"../Reducers/type\"\r\n\r\nimport axios from \"axios\"\r\n\r\n\r\nconst updateRecord = (medicaldoc, xray, report, currentMedicine, id) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: UPLOAD_RECORD,\r\n    })\r\n    var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n    const formData = new FormData()\r\n\r\n    medicaldoc.forEach((rec) => {\r\n        formData.append(\"medicaldoc\", rec)\r\n\r\n\r\n    })\r\n    xray.forEach((rec) => {\r\n        formData.append(\"xray\", rec)\r\n\r\n    })\r\n    report.forEach((rec) => {\r\n        formData.append(\"report\", rec)\r\n    })\r\n    currentMedicine.forEach((rec) => {\r\n        formData.append(\"currentMedicine\", rec)\r\n    })\r\n\r\n    axios.post(`/patient-medical-history`,\r\n        formData,\r\n        {\r\n            params: { id },\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }\r\n    ).then(function () {\r\n        dispatch({\r\n            type: UPLOAD_RECORD_SUCCESS,\r\n            payload: \"SUCCESS\"\r\n        })\r\n    })\r\n        .catch(function () {\r\n            dispatch({\r\n                type: UPLOAD_RECORD_FAIL,\r\n                data: \"Failed\"\r\n            })\r\n        });\r\n\r\n}\r\nexport default updateRecord\r\n","import React from 'react'\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport updateRecord from \"../Actions/UploadRecord\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nconst UploadRecord = () => {\r\n\r\n    var medicalDocs = []\r\n    var xrays = []\r\n    var reports = []\r\n    var currMedicines = []\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    const handleUploadMedical = (e) => {\r\n\r\n        medicalDocs.push(...e.target.files)\r\n        console.log(medicalDocs)\r\n    }\r\n\r\n    const handleUploadXrays = (e) => {\r\n        xrays.push(...e.target.files)\r\n        console.log(xrays)\r\n    }\r\n\r\n    const handleUploadReports = (e) => {\r\n        reports.push(...e.target.files)\r\n        console.log(reports)\r\n    }\r\n\r\n    const handleUploadCurrmedics = (e) => {\r\n        currMedicines.push(...e.target.files)\r\n        console.log(currMedicines)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = () => {\r\n        dispatch(updateRecord(medicalDocs, xrays, reports, currMedicines, user._id))\r\n    }\r\n    return (\r\n        <Form>\r\n            <Form.Group controlId=\"formControlsFile\">\r\n                <Form.Label>Any Medical Documents (.Docx)</Form.Label>\r\n                <Form.Control onChange={(e) => handleUploadMedical(e)} type=\"file\" placeholder=\"upload your file here\" multiple />\r\n\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formControlsFile\">\r\n                <Form.Label>X-rays (.img)</Form.Label>\r\n                <Form.Control onChange={(e) => handleUploadXrays(e)} type=\"file\" placeholder=\"upload your file here\" multiple />\r\n\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formControlsFile\">\r\n                <Form.Label> Reports (.pdf) (.Docx)</Form.Label>\r\n                <Form.Control onChange={(e) => handleUploadReports(e)} type=\"file\" placeholder=\"upload your file here\" multiple />\r\n\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formControlsFile\">\r\n                <Form.Label> Current Medicine (.img)</Form.Label>\r\n                <Form.Control onChange={(e) => handleUploadCurrmedics(e)} type=\"file\" placeholder=\"upload your file here\" multiple />\r\n\r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={() => handleSubmit()}>Upload</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default UploadRecord\r\n","import { SET_RATING } from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\nconst setRating = (stars, review, doctor) => async (dispatch) => {\r\n    try {\r\n        console.log(stars, review, doctor)\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = await axios.post(\"/reviews\", { stars, review, doctor },\r\n\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n        dispatch({\r\n            type: SET_RATING,\r\n            dispatch: data\r\n\r\n        })\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport default setRating","import React, { useState } from 'react'\r\nimport { Alert, Modal, Button, Form, Container } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getPrescription } from \"../Actions/Prescriptions\"\r\nimport Rating from \"./Rating\"\r\nimport { BsStarFill } from \"react-icons/bs\";\r\nimport { BsStarHalf } from \"react-icons/bs\";\r\nimport { BsStar } from \"react-icons/bs\";\r\nimport setRating from \"../Actions/Rating\"\r\n\r\nfunction CompletedApp(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [rate, setRate] = useState({\r\n        stars: \"\",\r\n        review: \"\"\r\n    })\r\n    console.log(rate)\r\n    const [page, setPage] = useState(1)\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setPage(1)\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const dispatch = useDispatch()\r\n    const handlePresc = () => {\r\n        handleShow()\r\n        dispatch(getPrescription(props.appId))\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch(setRating(rate.stars, rate.review, props.doctorId))\r\n        setShow(false)\r\n    }\r\n    const { prescriptions } = useSelector(state => state.prescriptions)\r\n    return (\r\n        <Alert variant=\"success\">\r\n            <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n            <p>\r\n                Aww yeah, you meeting with the doctor is completed\r\n            </p>\r\n            <hr />\r\n            <p className=\"mb-0\">\r\n                Now you can check prescription provided by the doctor\r\n            </p>\r\n            <Button variant=\"primary\" onClick={() => handlePresc()}>\r\n                Show Prescription\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Prescription</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {page === 1 ? (\r\n                        prescriptions ? prescriptions.map((p) => {\r\n                            return (<p>{p}</p>)\r\n                        }) : <p>No prescriptions Provided by the doctor</p>\r\n                    ) :\r\n                        (\r\n\r\n                            <Container>\r\n                                <Rating\r\n                                    size={50}\r\n                                    count={5}\r\n                                    color={\"#ffd700\"}\r\n                                    activeColor={\"#FFDF00\"}\r\n                                    value={3.5}\r\n                                    a11y={true}\r\n                                    isHalf={true}\r\n                                    emptyIcon={<BsStar />}\r\n                                    halfIcon={<BsStarHalf />}\r\n                                    filledIcon={<BsStarFill />}\r\n                                    setRating={setRate}\r\n\r\n                                />\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Reviews</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} onChange={(e) => setRate({ ...rate, review: e.target.value })} />\r\n                                </Form.Group>\r\n                            </Container>\r\n\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {page === 1 ? (\r\n                        <Button variant=\"primary\" onClick={() => setPage(2)}>\r\n                            Give your rating and review\r\n                        </Button>) : (\r\n                        <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n                            Submit\r\n                        </Button>\r\n                    )}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Alert >\r\n    )\r\n}\r\n\r\nexport default CompletedApp\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Nav, Tab } from 'react-bootstrap'\r\nimport AcceptedRequest from \"./AcceptedRequest\"\r\nimport RejectedRequest from \"./RejectedRequest\"\r\nimport PendingRequest from \"./PendingRequest\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport listAppointment from \"../Actions/ListAppointments\"\r\nimport UploadRecord from \"./UploadRecord\"\r\nimport CompletedApp from \"./CompletedApp\"\r\n\r\n\r\nconst TabsPatient = (props) => {\r\n    const { appointments } = useSelector(state => state.appointments)\r\n    const [click, setClick] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const handleClick = () => {\r\n        if (click) {\r\n            dispatch(listAppointment(props._id, props.isDoctor))\r\n            setClick(false)\r\n        }\r\n    }\r\n    const app = appointments ? appointments.map((app) => {\r\n        if (app.accept_status === \"Accepted\") {\r\n            return (<AcceptedRequest id={app._id} />)\r\n        }\r\n        else if (app.accept_status === \"Rejected\") {\r\n            return (<RejectedRequest id={app._id} />)\r\n        }\r\n        else if (app.accept_status === \"Pending\") {\r\n            return (< PendingRequest id={app._id} />)\r\n        }\r\n        return null\r\n    }) : null\r\n    const prescription = appointments ? appointments.map((app) => {\r\n        if (app.accept_status === \"Completed\") {\r\n            return (<CompletedApp appId={app._id} patientId={app.patient_id} doctorId={app.doctor_id} />)\r\n        }\r\n        return null\r\n    }) : null\r\n\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <Row>\r\n                <Col sm={3} key=\"col-1\">\r\n                    <Nav variant=\"tabs\" className=\"flex-column\">\r\n                        <Nav.Item key=\"first\">\r\n                            <Nav.Link eventKey=\"appointment\" onClick={() => handleClick()}>Appointments</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item key=\"second\">\r\n                            <Nav.Link eventKey=\"prescription\">Prescription</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item key=\"third\">\r\n                            <Nav.Link eventKey=\"medical_records\">Medical Records</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                <Col sm={9} key=\"col-2\">\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"appointment\" key=\"first-content\">\r\n                            {app}\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"prescription\" key=\"second-content\">\r\n                            {prescription}\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"medical_records\" key=\"third-content\">\r\n                            <UploadRecord />\r\n                        </Tab.Pane>\r\n\r\n\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default TabsPatient\r\n","import React from 'react'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <LoadingOverlay\r\n\r\n            spinner\r\n            text='Loading..'\r\n        >\r\n        </LoadingOverlay>\r\n    )\r\n}\r\nexport default LoadingSpinner\r\n","import React,{useState} from 'react'\r\nimport {Modal,Form,Row,Col,Button,FormControl} from \"react-bootstrap\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport TimeSlot from \"./TimeSlot\"\r\nimport {updateProfilePatient} from \"../Actions/UpdatePersonalDetails\"\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\n\r\nconst PersonalDetailPatient=(props)=> {\r\n    var [show, setShow] = useState(true);\r\n    const [dob,setDob] = useState(null);\r\n    const {user} = useSelector(state=>state.userLogin.userInfo)\r\n    \r\n    var [userDetails,setUserDetails] = useState({\r\n        age:\"\",\r\n        gender:\"\",\r\n        blood_group:\"\",\r\n        location:\"\",\r\n        image:\"\"\r\n    })\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = ()=>{\r\n        dispatch(updateProfilePatient(user._id,dob,userDetails))\r\n        setShow(false)\r\n    }\r\n    const updateStatus = useSelector(state=>state.updateStatus)\r\n    const {loading} = updateStatus\r\n    \r\n    return (\r\n           \r\n        <Modal\r\n              show={show}\r\n              onHide={() => setShow(false)}\r\n              size=\"xl\"\r\n              dialogClassName=\"modal-90w\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Personal Details\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              {loading ? <LoadingSpinner /> :\r\n              (<Modal.Body>\r\n                  <Row>\r\n                      <Col>\r\n                      \r\n                      {/*For showing the left side profile image*/} \r\n                      <Row>\r\n                        <FaUser fontSize=\"150px\" style={{\"marginLeft\":\"160px\"}}/>\r\n                    </Row>\r\n                    <Row style={{\"marginTop\":\"50px\",\"paddingLeft\":\"150px\"}}>\r\n                    <div className=\"mb-3\">\r\n                        <FormControl type=\"file\" onChange={(e) =>setUserDetails({...userDetails,image: e.target.file[0]}) }/>\r\n                    </div>\r\n                    </Row>\r\n                        \r\n                    </Col>\r\n                    <Col>\r\n                    <Form>\r\n                        \r\n                         {/*email input set as default input*/} \r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                            <Form.Label column sm=\"2\">\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue={user.email} />\r\n                            </Col>\r\n                        </Form.Group> \r\n                        \r\n                      {/*name input set as default input*/}\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintext\">\r\n                            <Form.Label column sm=\"2\">\r\n                             Name\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue={user.name}  />\r\n                            </Col>\r\n                        </Form.Group> \r\n                        \r\n                        {/*age input*/} \r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm=\"2\">\r\n                                <Form.Label column >\r\n                                    Age\r\n                                </Form.Label>\r\n                            </Col>\r\n                            \r\n                            <Col sm=\"2\" >\r\n                                <Form.Control  onChange={(e)=>{setUserDetails({...userDetails,age:e.target.value})}} value={userDetails.age} size=\"sm\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        {/*gender selection*/}   \r\n\r\n                        <Form.Group as={Row} > \r\n                        <Col sm=\"2\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Form.Control as=\"select\" size=\"sm\" custom  onChange={(e)=>setUserDetails({...userDetails, gender: e.target.options[e.target.selectedIndex].text})}>\r\n                                <option>Male</option>\r\n                                <option>Female</option>\r\n                                <option>Others</option>\r\n                                \r\n                            </Form.Control>\r\n                        </Col>\r\n                        </Form.Group>\r\n\r\n                        {/*blod group*/}\r\n\r\n                        <Form.Group as={Row} >\r\n                            <Col xs=\"auto\" className=\"my-1\">\r\n                                <Form.Label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                    Blood Group\r\n                                </Form.Label>\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                className=\"mr-sm-3\"\r\n                                id=\"inlineFormCustomSelect\"\r\n                                custom\r\n                             \r\n                                onChange={(e)=>setUserDetails({...userDetails, blood_group: e.target.options[e.target.selectedIndex].text})}>\r\n                                  <option key=\"1\">A Positive</option>\r\n                                    <option key=\"2\">A Negative</option>\r\n                                    <option key=\"3\">A Unknown</option>\r\n                                    <option key=\"4\">B Positive</option>\r\n                                    <option key=\"5\">B Negative</option>\r\n                                    <option key=\"6\">B Unknown</option>\r\n                                    <option key=\"7\">AB Positive</option>\r\n                                    <option key=\"8\">AB Negative</option>\r\n                                    <option key=\"9\">AB Unknown</option>\r\n                                    <option key=\"10\">O Positive</option>\r\n                                    <option key=\"11\">O Negative</option>\r\n                                    <option key=\"12\">O Unknown</option>\r\n                            </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        {/*date of birth */}\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={3}>\r\n                                <Form.Label>\r\n                                    Date Of Birth\r\n                                </Form.Label>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                <TimeSlot setDob ={setDob}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        {/* Location details */}\r\n                        <Form.Group as={Row}>\r\n                            <Col sm=\"2\">\r\n                                <Form.Label>\r\n                                    Location\r\n                                </Form.Label>\r\n                            </Col>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control  onChange={(e)=>{setUserDetails({...userDetails,location:e.target.value})}}/>\r\n                            </Col>\r\n                            \r\n                        </Form.Group>\r\n                    </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button variant=\"primary\" className=\"float-right\" style={{\"marginTop\":\"100px\"}} onClick={()=>handleSubmit()}>\r\n                      Submit\r\n                  </Button>\r\n              </Modal.Body>)}\r\n        \r\n              \r\n            </Modal>\r\n    )\r\n      \r\n    \r\n}\r\n\r\nexport default PersonalDetailPatient\r\n","import {\r\n    UPDATE_PERSONAL_DETAIL,\r\n    UPDATE_PERSONAL_DETAIL_SUCCESS,\r\n    UPDATE_PERSONAL_DETAIL_FAIL\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\n\r\nexport const updateProfilePatient = (id, dob, values) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        console.log(token)\r\n        const { age, blood_group, location } = values\r\n        const { data } = await axios.post(\"/patientprofile\", {\r\n\r\n            dob,\r\n            age,\r\n            blood_group,\r\n            date_of_birth: dob,\r\n            location\r\n        },\r\n            { params: { id } },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const updateProfileDoctor = (values, slots) => async (dispatch) => {\r\n    const { id, age, specialisation } = values\r\n    try {\r\n\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL\r\n        })\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        console.log(token)\r\n        const { data } = await axios.post(\"/doctorprofile\", {\r\n            age,\r\n            specialisation,\r\n            slots\r\n        },\r\n            { params: { id } },\r\n\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PERSONAL_DETAIL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport TimePicker from 'react-time-picker';\r\nimport {Row,Col } from \"react-bootstrap\"\r\n\r\nexport default function TimeRangePicker(props) {\r\n  const [start, setStart] = useState('10:00');\r\n  const [end,setEnd] = useState('10:00')\r\n  props.setStart(start)\r\n  props.setEnd(end)\r\n  return (\r\n    <div>\r\n     <Row>\r\n        <Col>\r\n            Start Time : \r\n        </Col>\r\n        <Col>\r\n        <TimePicker\r\n        onChange={setStart}\r\n        value={start}\r\n        disableClock ={true}\r\n      />\r\n        </Col>\r\n     </Row>\r\n     <Row>\r\n        <Col>\r\n            End Time : \r\n        </Col>\r\n        <Col>\r\n        <TimePicker\r\n        onChange={setEnd}\r\n        value={end}\r\n        disableClock ={true}\r\n      />\r\n        </Col>\r\n     </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Button} from \"react-bootstrap\"\r\nimport moment from \"moment\"\r\n\r\nconst ShowTimeSlot=(props)=> {\r\n\r\n    const getTimeStops=(start, end)=>{\r\n        var startTime = moment(start, 'HH:mm');\r\n        var endTime = moment(end, 'HH:mm');\r\n        \r\n        if( endTime.isBefore(startTime) ){\r\n          endTime.add(1, 'day');\r\n        }\r\n      \r\n        var timeStops = [];\r\n      \r\n        while(startTime <= endTime){\r\n          timeStops.push(new moment(startTime).format('HH:mm'));\r\n          startTime.add(60, 'minutes');\r\n        }\r\n        var slots=[]\r\n        for(var ind =0;ind<timeStops.length-1;ind++){\r\n            slots.push(`${timeStops[ind]} - ${timeStops[ind+1]}`)\r\n        }\r\n        return slots;\r\n    }\r\n      \r\n    \r\n    const slots = getTimeStops(props.start,props.end)\r\n    return (\r\n        \r\n        <div>  \r\n            {\r\n            slots.map((s)=>{\r\n                return(\r\n                <Button variant=\"outline-success\" onClick={()=>props.handleSelectSlot(s)}>\r\n                    {s}\r\n                </Button>)\r\n             })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTimeSlot\r\n","import React,{useState} from 'react'\r\nimport {Modal,Row,Col,Form,Button} from \"react-bootstrap\"\r\nimport {useSelector} from \"react-redux\"\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\nimport {updateProfileDoctor} from \"../Actions/UpdatePersonalDetails\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport TimeRangePicker from \"../Components/TimeRangePicker\"\r\nimport ShowTimeSlot from \"../Components/ShowTimeSlot\"\r\n\r\n\r\nconst PersonalDetailDoctor=(props)=> {\r\n    var [show, setShow] = useState(true);\r\n    const {user} = useSelector(state=>state.userLogin.userInfo)\r\n    const [start,setStart] = useState(\"\")\r\n    const [end,setEnd] = useState(\"\")\r\n    const [slotShow,setSlotShow] = useState(null)\r\n    const [selectedSlot,setSelectedSlot] = useState({\r\n        slot: []\r\n    })\r\n    var [userDetails,setUserDetails] = useState({\r\n        id:user._id,\r\n        age:\"\",\r\n        specialisation:\"\",\r\n    })\r\n    const dispatch = useDispatch()\r\n    const handleSubmit=()=>{\r\n        dispatch(updateProfileDoctor(userDetails,selectedSlot.slot))\r\n        setShow(false)\r\n\r\n    }\r\n\r\n    const handleGetSlot =()=>{\r\n        \r\n        setSlotShow(!slotShow)\r\n\r\n    }  \r\n    const handleSelectSlot=(val)=>{\r\n        setSelectedSlot({slot : [...selectedSlot.slot,val]})\r\n\r\n            console.log(selectedSlot)\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        \r\n            <Modal\r\n              show={show}\r\n              onHide={() => setShow(false)}\r\n              dialogClassName=\"modal-90w\"\r\n              size=\"xl\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Personal Details\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                    <Col>\r\n                    <Row>\r\n                        <FaUserGraduate fontSize=\"150px\" style={{\"marginLeft\":\"160px\"}}/>\r\n                    </Row>\r\n                    {/* <Row style={{\"marginTop\":\"50px\",\"paddingLeft\":\"150px\"}}>\r\n                    <div className=\"mb-3\">\r\n                        <FormControl type=\"file\" onChange={(e) =>setUserDetails({...userDetails,image: e.target.file[0]}) }/>\r\n                    </div>\r\n                    </Row> */}\r\n                        \r\n                    </Col>    \r\n                   <Col>\r\n                    <Form>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                            <Form.Label column sm=\"2\">\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue={user.email} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                            <Form.Label column sm=\"2\">\r\n                             Name\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue={user.name} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintext\">\r\n                            <Form.Label column sm=\"2\">\r\n                             Age\r\n                            </Form.Label>\r\n                            <Col sm=\"3\">\r\n                            <Form.Control type=\"number\" onChange={(e)=>setUserDetails({...userDetails,age:e.target.value})} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintext\">\r\n                            <Form.Label column sm=\"3\">\r\n                             Specialisation\r\n                            </Form.Label>\r\n                            <Col sm=\"5\">\r\n                            <Form.Control type=\"text\" onChange={(e)=>setUserDetails({...userDetails,specialisation:e.target.value})}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Col>\r\n                        Your Slots\r\n                    </Col>\r\n                    <Col>\r\n                        Pick the time limit yout want yout slots to be in \r\n                        <TimeRangePicker setStart={setStart} setEnd={setEnd}/>\r\n                        <Button variant=\"primary\" onClick={()=>handleGetSlot()}>Show slots</Button>\r\n                        {\r\n                            slotShow ? (<ShowTimeSlot  handleSelectSlot={handleSelectSlot} start={start} end={end}/>) : null\r\n                        }\r\n                      \r\n                    </Col>\r\n\r\n                    </Form>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Button variant=\"primary\" className=\"float-right\" onClick={()=>handleSubmit()}>\r\n                    Submit\r\n                </Button>\r\n                  \r\n              </Modal.Body>\r\n            </Modal>\r\n      \r\n    )\r\n}\r\n\r\nexport default PersonalDetailDoctor\r\n","import { SET_ACTIVE } from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\nconst setActive = (isActive, id) => async (dispatch) => {\r\n    try {\r\n\r\n        var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const { data } = await axios.post(\"/setActive\", { isActive },\r\n            { params: { id } },\r\n\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            }\r\n        )\r\n        console.log(data)\r\n        dispatch({\r\n            type: SET_ACTIVE,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport default setActive","import React, { useEffect, useState } from 'react'\r\nimport Tabs from '../Components/Tabs'\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport listAppointment from \"../Actions/ListAppointments\"\r\nimport NewAppointment from \"../Components/NewAppointment\"\r\nimport listDoctor from \"../Actions/ListDoctors\"\r\nimport TabsPatient from \"../Components/TabsPatient\"\r\nimport PersonalDetailPatient from '../Components/PersonalDetailPatient';\r\nimport PersonalDetailDoctor from '../Components/PersonalDetailDoctor';\r\nimport Switch from \"react-switch\";\r\nimport setActive from \"../Actions/SetActive\"\r\n\r\n\r\n\r\nconst DashBoard = () => {\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const dispatch = useDispatch()\r\n    var user = ''\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n\r\n    const [checked, setChecked] = useState(user ? user.isActive : false)\r\n\r\n    var { isDoctor } = user\r\n\r\n    useEffect(() => {\r\n        dispatch(listAppointment(user._id, isDoctor))\r\n        dispatch(listDoctor())\r\n\r\n    }, [dispatch, isDoctor, user])\r\n    const handleSwitch = () => {\r\n        setChecked(!checked)\r\n\r\n        dispatch(setActive(!checked, user._id))\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <div style={{ \"backgroundColor\": \"#dde2de\", \"padding\": \"20px\" }}>\r\n            <div style={{ \"backgroundColor\": \"white\", \"margin\": \"10px\", \"borderBottom\": \"1px solid #dde2de\", \"padding\": \"10px\" }}>\r\n                <Row>\r\n                    <Col sm>\r\n                        <h5>Your Drive</h5>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <Row>\r\n                            <FiUser style={{ \"fontSize\": \"40px\", \"color\": \"primary\" }} />\r\n                            <Col sm={4} style={{ \"paddingTop\": \"5px\" }}>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.name}</h6>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.email}</h6>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm>\r\n                        {!isDoctor ? (<NewAppointment patientId={user._id} />) : null}\r\n                        {isDoctor ? (<Switch onChange={() => handleSwitch()} onColor=\"#007bff\" checked={checked} />) : null}\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                {isDoctor ? (<Tabs isDoctor={isDoctor} />) : (<TabsPatient isDoctor={isDoctor} />)}\r\n                {user.onBoarding ? (isDoctor ? (<PersonalDetailDoctor show={true} />) : (<PersonalDetailPatient show={true} />)) : null}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default DashBoard\r\n\r\n","export default __webpack_public_path__ + \"static/media/welcome.1b1cec38.svg\";","import React,{useState} from 'react'\r\nimport {Form,Button} from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {loginUser} from \"../Actions/UserLogin\";\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nconst LoginForm=({location,history})=> {\r\n    const [state,setState] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        isDoctor:false\r\n        })\r\n    const dispatch = useDispatch()         \r\n    const  handleSubmit=()=>{\r\n     dispatch(loginUser(state))\r\n\r\n} \r\n\r\n    return (\r\n        <Form >\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email / Username</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onInput={(e)=>setState({...state,email:e.target.value})} />\r\n            <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n            </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\"  onInput={(e)=>setState({...state,password:e.target.value})}/>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Iam a Doctor\" onClick={()=>setState({...state,isDoctor:true})}/>\r\n        </Form.Group>\r\n        <Link to=\"/\">\r\n            <Button variant=\"primary\" type=\"submit\" onClick={() =>handleSubmit()}>\r\n                 Login\r\n            </Button>\r\n        </Link>\r\n        \r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import {\r\n    LOGIN, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOGOUT, SIGNUP,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n} from \"../Reducers/type\"\r\nimport axios from \"axios\"\r\nexport const signup = (values) => async (dispatch) => {\r\n    try {\r\n\r\n        const { email, password, isDoctor, name } = values\r\n\r\n        dispatch({\r\n            type: SIGNUP\r\n        })\r\n        const { data } = axios.post(\"/signup\", { email, password, isDoctor, name })\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\nexport const loginUser = (values) => async (dispatch) => {\r\n    try {\r\n\r\n        const { email, password, isDoctor } = values\r\n        dispatch({\r\n            type: LOGIN,\r\n\r\n        })\r\n        const { data } = await axios.post(\"/login\", { email, password, isDoctor })\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({ type: USER_LOGOUT })\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Row, Col, Toast } from \"react-bootstrap\"\r\n\r\nfunction ShowToast(props) {\r\n    const [show, setShow] = useState(true);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                            src=\"holder.js/20x20?text=%20\"\r\n                            className=\"rounded mr-2\"\r\n                            alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">Bootstrap</strong>\r\n                        <small>11 mins ago</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ShowToast\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { signup } from \"../Actions/UserLogin\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport ShowToast from \"./Toast\"\r\n\r\nconst SignupForm = () => {\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        email: '',\r\n        password: \"\",\r\n        isDoctor: false\r\n    })\r\n    const [showToast, setShowToast] = useState(false)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = () => {\r\n        dispatch(signup(state))\r\n        setState({ name: \"\", email: \"\", password: \"\" })\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"join-practa\">\r\n                <h5>Join Practa  </h5>\r\n            </div>\r\n            <hr />\r\n            <Form  >\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" onChange={(e) => setState({ ...state, name: e.target.value })} value={state.name} />\r\n                    </Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => setState({ ...state, email: e.target.value })} value={state.email} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setState({ ...state, password: e.target.value })} value={state.password} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"I am a Doctor\" onClick={(e) => setState({ ...state, isDoctor: !state.isDoctor })} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" onClick={() => handleSubmit()}  >\r\n                    Signup\r\n                </Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default SignupForm\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Container, Image, Tabs, Tab } from \"react-bootstrap\"\r\nimport welcome from \"../images/welcome.svg\"\r\nimport { useSelector } from \"react-redux\"\r\nimport LoginForm from '../Components/LoginForm'\r\nimport SignupForm from '../Components/SignupForm'\r\n\r\nconst Login = ({ location, history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.pushState(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    return (\r\n\r\n\r\n        <Container fluid=\"md\" style={{ \"marginTop\": \"25px\" }}>\r\n            <Tabs defaultActiveKey=\"login\" className=\"justify-content-md-center\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"login\" title=\"Login\" >\r\n                    <Row className=\"justify-content-md-center\" style={{ \"marginTop\": \"50px\", \"padding\": \"20px\", \"display\": \"flex\" }}>\r\n                        <Col xs={6} md={4} style={{ \"marginTop\": \"50px\", \"marginRight\": \"40px\" }}>\r\n                            <Image src={welcome} fluid />\r\n                        </Col>\r\n                        <Col xs={6} md={4} style={{ \"border\": \"0.1px solid #dde2de\", \"padding\": \"15px\" }}>\r\n                            <LoginForm />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Tab>\r\n                <Tab eventKey=\"signup\" title=\"Signup\" >\r\n                    <Row className=\"justify-content-md-center\" style={{ \"marginTop\": \"100px\", \"padding\": \"20px\", \"display\": \"flex\" }}>\r\n                        <Col xs={6} md={4} style={{ \"marginTop\": \"50px\", \"marginRight\": \"40px\" }}>\r\n                            <Image src={welcome} fluid />\r\n                        </Col>\r\n                        <Col xs={6} md={4} style={{ \"border\": \"0.1px solid #dde2de\", \"padding\": \"15px\" }}>\r\n                            <SignupForm />\r\n                        </Col>\r\n                    </Row>\r\n                </Tab>\r\n            </Tabs>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Login","import {\r\n    UPLOAD_AVATAR,\r\n    UPLOAD_AVATAR_SUCCESS,\r\n    UPLOAD_AVATAR_FAIL\r\n} from \"../Reducers/type\"\r\n\r\nimport axios from \"axios\"\r\n\r\nconst updateAvatar = (image, id, isDoctor) => async (dispatch) => {\r\n    console.log(image.image)\r\n    dispatch({\r\n        type: UPLOAD_AVATAR,\r\n    })\r\n    var { token } = JSON.parse(localStorage.getItem('userInfo'))\r\n    var formData = new FormData()\r\n    formData.append(\"avatar\", image.image)\r\n\r\n    var api = isDoctor ? \"doctorprofilepic\" : \"patientprofilepic\"\r\n\r\n    axios.post(`/${api}`,\r\n        formData,\r\n        {\r\n            params: { id },\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }\r\n    ).then(function () {\r\n        dispatch({\r\n            type: UPLOAD_AVATAR_SUCCESS,\r\n            payload: \"SUCCESS\"\r\n        })\r\n    })\r\n        .catch(function () {\r\n            dispatch({\r\n                type: UPLOAD_AVATAR_FAIL,\r\n                data: \"Failed\"\r\n            })\r\n        });\r\n\r\n}\r\nexport default updateAvatar\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, FormControl, Button } from \"react-bootstrap\"\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport updateAvatar from \"../Actions/UploadAvatar\"\r\n\r\n\r\nfunction DoctorProfile() {\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    const avatar = user.avatar\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n    const handleUploadImage = () => {\r\n        dispatch(updateAvatar(image, user._id, user.isDoctor))\r\n    }\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col sm=\"5\">\r\n                    {\r\n                        user.avatar ? (<img src={\"data:image/jpg;base64,\" + btoa({ avatar })} alt=\"avatar\" />) : <FaUser fontSize=\"150px\" style={{ \"marginLeft\": \"160px\" }} />\r\n                    }\r\n                    <Row style={{ \"marginTop\": \"50px\", \"paddingLeft\": \"150px\" }}>\r\n                        <div className=\"mb-3\">\r\n                            <FormControl type=\"file\" onChange={(e) => setImage({ image: e.target.files[0] })} />\r\n                            <Button variant=\"primary\" onClick={() => handleUploadImage()}>Upload</Button>\r\n                        </div>\r\n                    </Row>\r\n\r\n                </Col>\r\n                <Col sm=\"5\">\r\n                    <h6>Name  :  {user.name}</h6>\r\n                    <hr />\r\n                    <h6>Email : {user.email}</h6>\r\n                    <hr />\r\n                    <h6>Specialisaton : {user.specialisation}</h6>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorProfile\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, FormControl, Button } from \"react-bootstrap\"\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport updateAvatar from \"../Actions/UploadAvatar\"\r\n\r\n\r\nfunction PatientProfile() {\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    const avatar = user.avatar\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n    const handleUploadImage = () => {\r\n        dispatch(updateAvatar(image, user._id, user.isDoctor))\r\n    }\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col sm=\"5\">\r\n                    {\r\n                        user.avatar ? (<img src={`data:image/JPG;base64,${avatar}`} alt=\"avatar\" height=\"240px\" width=\"240px\" />) : <FaUser fontSize=\"150px\" style={{ \"marginLeft\": \"160px\" }} />\r\n                    }\r\n                    <Row style={{ \"marginTop\": \"50px\", \"paddingLeft\": \"150px\" }}>\r\n                        <div className=\"mb-3\">\r\n                            <FormControl type=\"file\" onChange={(e) => setImage({ image: e.target.files[0] })} />\r\n                            <Button variant=\"primary\" onClick={() => handleUploadImage()}>Upload</Button>\r\n                        </div>\r\n                    </Row>\r\n\r\n                </Col>\r\n                <Col sm=\"5\">\r\n                    <h6>Name  :  {user.name}</h6>\r\n                    <hr />\r\n                    <h6>Email : {user.email}</h6>\r\n                    <hr />\r\n                    <h6>Age : {user.age}</h6>\r\n                    <hr />\r\n                    <h6>Blood Group : {user.bloodGroup}</h6>\r\n                    <hr />\r\n                    <h6>Dob : {user.date_of_birth}</h6>\r\n                    <hr />\r\n                    <h6>Location : {user.location}</h6>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientProfile\r\n","import React from 'react'\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { useSelector } from \"react-redux\"\r\nimport DoctorProfile from \"../Components/DoctorProfile\"\r\nimport PatientProfile from \"../Components/PatientProfile\"\r\n\r\nconst Profile = () => {\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    return (\r\n        <div style={{ \"backgroundColor\": \"#dde2de\", \"padding\": \"20px\" }}>\r\n            <div style={{ \"backgroundColor\": \"white\", \"margin\": \"10px\", \"borderBottom\": \"1px solid #dde2de\", \"padding\": \"10px\" }}>\r\n                <Row>\r\n                    <Col sm>\r\n                        <h5>Your Drive</h5>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <Row>\r\n                            <FiUser style={{ \"fontSize\": \"40px\", \"color\": \"primary\" }} />\r\n                            <Col sm={4} style={{ \"paddingTop\": \"5px\" }}>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.name}</h6>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.email}</h6>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                {user.isDoctor ? (<DoctorProfile />) : <PatientProfile />}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Row, Col, Button, Alert } from \"react-bootstrap\"\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport LoadingSpinner from \"./LoadingSpinner\"\r\n\r\n\r\n\r\nfunction ShowProfile() {\r\n    const { loading, patientDetails } = useSelector(state => state.patientDetails)\r\n\r\n    const avatar = patientDetails ? patientDetails.avatar : null\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingSpinner />) : patientDetails ? (\r\n                <Row>\r\n                    <Col sm=\"5\">\r\n                        {\r\n                            patientDetails.avatar ? (<img src={\"data:image/jpg;base64,\" + btoa({ avatar })} alt=\"avatar\" />) : <FaUser fontSize=\"150px\" style={{ \"marginLeft\": \"160px\" }} />\r\n                        }\r\n                    </Col>\r\n                    <Col sm=\"5\">\r\n                        <h6>Name  :  {patientDetails.name}</h6>\r\n                        <hr />\r\n                        <h6>Email : {patientDetails.email}</h6>\r\n                        <hr />\r\n                        <h6>Age : {patientDetails.age}</h6>\r\n                        <hr />\r\n                        <h6>Blood Group : {patientDetails.bloodGroup}</h6>\r\n                        <hr />\r\n                        <h6>Dob : {patientDetails.date_of_birth}</h6>\r\n                        <hr />\r\n                        <h6>Location : {patientDetails.location}</h6>\r\n\r\n                    </Col>\r\n                </Row>) : (<Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n                    <p>\r\n                        Some error occured while trying to fetch the details\r\n                    </p>\r\n                </Alert>)}\r\n            <Link to=\"/user/dashboard\">\r\n                <Button variant=\"primary\">\r\n                    Back\r\n                </Button>\r\n            </Link>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ShowProfile\r\n","import React from 'react'\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { useSelector } from \"react-redux\"\r\nimport ShowProfile from \"../Components/ShowProfile\"\r\n\r\nconst PatientProfile = () => {\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    var user = \"\"\r\n    if (userInfo) {\r\n        user = userInfo.user\r\n    }\r\n    return (\r\n        <div style={{ \"backgroundColor\": \"#dde2de\", \"padding\": \"20px\" }}>\r\n            <div style={{ \"backgroundColor\": \"white\", \"margin\": \"10px\", \"borderBottom\": \"1px solid #dde2de\", \"padding\": \"10px\" }}>\r\n                <Row>\r\n                    <Col sm>\r\n                        <h5>Your Drive</h5>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <Row>\r\n                            <FiUser style={{ \"fontSize\": \"40px\", \"color\": \"primary\" }} />\r\n                            <Col sm={4} style={{ \"paddingTop\": \"5px\" }}>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.name}</h6>\r\n                                <h6 style={{ \"fontSize\": \"10px\" }}>{user.email}</h6>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <ShowProfile />\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PatientProfile\r\n","export default __webpack_public_path__ + \"static/media/Practo-logo.2b751374.png\";","import React from 'react'\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {Navbar,Container,Nav,Image,Col,Button,NavDropdown} from \"react-bootstrap\"\r\nimport logo from '../images/Practo-logo.png'\r\nimport { Link} from \"react-router-dom\"\r\nimport {logout} from \"../Actions/UserLogin\"\r\n\r\n\r\nconst NavBar =({location,history})=> {\r\n    \r\n        const {userInfo} = useSelector(state=>state.userLogin)\r\n        const dispatch = useDispatch()\r\n        var user = \"\"\r\n        if(userInfo){\r\n           user = userInfo.user\r\n        }\r\n\r\n        const handleLogout=()=>{\r\n            dispatch(logout())\r\n            \r\n        }\r\n        return (\r\n            <Navbar style={{\"backgroundColor\":\"white\",\"border\":\"1px solid #dde2de\"}}>\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Col>\r\n                            <Image src={logo} className = \"logo-image\" bsPrefix = \".logo-image\" fluid />\r\n                        </Col>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                                <Link to=\"/\" style={{ \"textDecoration\": 'none' }}>\r\n                                    <div>   \r\n                                        <h5 >Doctors</h5>\r\n                                        <h6>Book an appointment</h6>\r\n                                    </div>\r\n                                </Link>\r\n                               \r\n                            </Nav>\r\n                            {user ? (\r\n                              <NavDropdown title={user.name} id=\"username\" className=\"ml-auto\">\r\n                                 <NavDropdown.Item componentClass={Link} href=\"/user/dashboard\" to=\"/user/dashboard\" >\r\n                                     DashBoard\r\n                                 </NavDropdown.Item>\r\n                                 <NavDropdown.Item componentClass={Link} href=\"/login\" to=\"/login\"  onClick={()=>handleLogout()}>\r\n                                     Logout\r\n                                 </NavDropdown.Item>\r\n                                 <NavDropdown.Item componentClass={Link} href=\"/user/profile\" to=\"/user/profile\" >\r\n                                     My Profile\r\n                                 </NavDropdown.Item>\r\n                             </NavDropdown>\r\n                            ): (\r\n                                <Nav className=\"ml-auto\" to=\"/login\" style={{ \"textDecoration\": 'none' }}>\r\n                                    <Link to=\"/login\" >\r\n                                            <Button variant=\"light\" bsPrefix = \"login-btn\" className=\"login-btn\">Login / Signup</Button> \r\n                                    </Link>\r\n                                </Nav>\r\n                            )}\r\n                            \r\n                        </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\nexport default NavBar","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from \"./Screens/Home\"\r\nimport DashBoard from \"./Screens/DashBoard\"\r\nimport Login from \"./Screens/Login\"\r\nimport Profile from \"./Screens/Profile\"\r\nimport PatientProfile from './Screens/PatientProfileScreen';\r\n\r\n\r\n\r\nimport NavBar from './Components/NavBar'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path=\"/user/dashboard\" component={DashBoard} />\r\n        <Route path=\"/user/profile\" component={Profile} />\r\n        <Route path=\"/patientprofile\" component={PatientProfile} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, createStore, combineReducers } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { userLoginReducer } from \"./Reducers/UserReducer\"\r\nimport { listAppointmetsReducer, createAppointmetsReducer, getSlots } from \"./Reducers/appointmentReducer\"\r\nimport { listDoctorReducer } from \"./Reducers/ListUser\"\r\nimport { updatePatient } from \"./Reducers/updateStatus\"\r\nimport { getPrescriptionReducer } from \"./Reducers/prescriptions\"\r\nimport { patientProfile } from \"./Reducers/ShowProfile\"\r\n\r\nconst middleware = [thunk]\r\n\r\nconst reducers = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    appointments: listAppointmetsReducer,\r\n    newAppointment: createAppointmetsReducer,\r\n    availableDoctors: listDoctorReducer,\r\n    updateStatus: updatePatient,\r\n    available_slots: getSlots,\r\n    prescriptions: getPrescriptionReducer,\r\n    patientDetails: patientProfile\r\n\r\n\r\n})\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage, loading: false },\r\n    appointments: [],\r\n    newAppointment: [],\r\n    availableDoctors: [],\r\n    updateStatus: [],\r\n    available_slots: [],\r\n    prescriptions: [],\r\n    patientDetails: [],\r\n}\r\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\nexport default store","import {LOGIN,\r\n        LOGIN_SUCCESS,\r\n        LOGIN_FAIL,\r\n    LOGOUT,\r\n    } from \"./type\"\r\n\r\n\r\nexport const  userLoginReducer =(state={},action)=>{\r\n    switch(action.type){\r\n        case LOGIN:\r\n            return{loading:true}\r\n        case LOGIN_SUCCESS :\r\n            return {loading:false,userInfo:action.payload} \r\n        case LOGIN_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case LOGOUT:\r\n            return {}     \r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\n","import {LIST_APPOINTMENTS,\r\n    LIST_APPOINTMENTS_SUCCESS,\r\n    LIST_APPOINTMENTS_FAIL,CREATE_APPOINTMENTS,CREATE_APPOINTMENTS_FAIL,CREATE_APPOINTMENTS_SUCCESS,GET_SLOT,\r\n    GET_SLOT_SUCCESS,\r\n    GET_SLOT_FAIL} from \"./type.js\"\r\n\r\n\r\n\r\nexport const listAppointmetsReducer = (state ={appointments:[]},action)=>{\r\n    switch(action.type){\r\n        case LIST_APPOINTMENTS:\r\n            return{loading:true}\r\n        case LIST_APPOINTMENTS_SUCCESS:\r\n            return {loading:false,appointments:action.payload}\r\n\r\n        case  LIST_APPOINTMENTS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}    \r\nexport const createAppointmetsReducer = (state ={newAppointment:[]},action)=>{\r\n    switch(action.type){\r\n        case CREATE_APPOINTMENTS:\r\n            return{loading:true}\r\n        case CREATE_APPOINTMENTS_SUCCESS:\r\n            return {loading:false,newAppointment:action.payload}\r\n\r\n        case  CREATE_APPOINTMENTS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}    \r\n\r\nexport const getSlots =(state={available_slots:[]},action)=>{\r\n    switch(action.type){\r\n        case GET_SLOT:\r\n            return{loading:true}\r\n        case GET_SLOT_SUCCESS:\r\n            return {loading:false,available_slots:action.payload}\r\n\r\n        case GET_SLOT_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {LIST_DOCTOR,\r\n    LIST_DOCTOR_SUCCESS,\r\n    LIST_DOCTOR_FAIL,} from \"./type\"\r\n\r\n\r\nexport const listDoctorReducer = (state ={availableDoctors:[]},action)=>{\r\n    switch(action.type){\r\n        case LIST_DOCTOR:\r\n            return {loading:true}\r\n        case LIST_DOCTOR_SUCCESS:\r\n            return {loading:false,availableDoctors:action.payload}\r\n        case LIST_DOCTOR_FAIL:\r\n            return {loading:false,error:action.payload}  \r\n        default:\r\n            return state          \r\n    }\r\n}    ","import {UPDATE_PERSONAL_DETAIL,\r\n    UPDATE_PERSONAL_DETAIL_SUCCESS,\r\n    UPDATE_PERSONAL_DETAIL_FAIL} from \"./type\"\r\n\r\nexport const  updatePatient =(state={},action)=>{\r\n        switch(action.type){\r\n            case UPDATE_PERSONAL_DETAIL:\r\n                return{loading:true}\r\n            case UPDATE_PERSONAL_DETAIL_SUCCESS: \r\n                return {loading:false,updateInfo:action.payload} \r\n            case UPDATE_PERSONAL_DETAIL_FAIL:\r\n                return {loading:false,error:action.payload}   \r\n            default:\r\n                return state    \r\n        }\r\n    }\r\n    ","import {GET_PRESCRIPTION,\r\n    GET_PRESCRIPTION_SUCCESS,\r\n    GET_PRESCRIPTION_FAIL} from \"./type\"\r\n\r\nexport const getPrescriptionReducer = (state ={prescriptions:[]},action)=>{\r\n    switch(action.type){\r\n        case GET_PRESCRIPTION:\r\n            return {loading:true}\r\n        case GET_PRESCRIPTION_SUCCESS:\r\n            return {loading:false,prescriptions:action.payload}\r\n        case GET_PRESCRIPTION_FAIL:\r\n            return {loading:false,error:action.payload}  \r\n        default:\r\n            return state          \r\n    }\r\n}    ","import {\r\n    SHOW_PROFILE,\r\n    SHOW_PROFILE_SUCCESS,\r\n    SHOW_PROFILE_FAIL\r\n} from \"./type\"\r\nexport const patientProfile = (state = { patientDetails: [] }, action) => {\r\n    switch (action.type) {\r\n        case SHOW_PROFILE:\r\n            return { loading: true }\r\n        case SHOW_PROFILE_SUCCESS:\r\n            return { loading: false, patientDetails: action.payload }\r\n        case SHOW_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from \"./store\"\r\nimport {Provider} from \"react-redux\"\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}